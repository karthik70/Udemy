<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_data_source">
    <sys_data_source action="INSERT_OR_UPDATE">
        <category/>
        <connection_timeout>0</connection_timeout>
        <connection_url/>
        <connection_url_parameters/>
        <csv_delimiter/>
        <data_in_single_column>false</data_in_single_column>
        <data_loader><![CDATA[(function loadData(import_set_table) {



    var coursedetail = new GetCourseDetails().CourseDetail();

    for (var i = 0; i < coursedetail.results.length; i++) {


        var str = coursedetail.results[i].url;
        str.toString();
        var url = str.startsWith("/course/draft/");



        if (coursedetail.results[i].published_title == null) {

            var mapa = {

                u_title: coursedetail.results[i].title,
                u_id: coursedetail.results[i].id,
                u_url: coursedetail.results[i].url,
                u_pricing: 'Not Defined',
                u_status: 'in Progress'

            };
            import_set_table.insert(mapa);

        } else if (coursedetail.results[i].is_paid == true & coursedetail.results[i].published_title != null &url==false) {


            var mapb = {

                u_title: coursedetail.results[i].title,
                u_id: coursedetail.results[i].id,
                u_url: coursedetail.results[i].url,
                u_pricing: 'Paid',
                u_status: 'Published'

            };
            import_set_table.insert(mapb);


        } else if (coursedetail.results[i].is_paid == false & coursedetail.results[i].published_title != null &url==false) {


            var mapc = {

                u_title: coursedetail.results[i].title,
                u_id: coursedetail.results[i].id,
                u_url: coursedetail.results[i].url,
                u_pricing: 'Free',
                u_status: 'Published'

            };
            import_set_table.insert(mapc);

        }else if(url==true&coursedetail.results[i].is_paid == true & coursedetail.results[i].published_title != null){
			
			
			var mapd = {

                u_title: coursedetail.results[i].title,
                u_id: coursedetail.results[i].id,
                u_url: coursedetail.results[i].url,
                u_pricing: 'Paid',
                u_status: 'Unpublished'

            };
            import_set_table.insert(mapd);
			
			
		}else if(url==true&coursedetail.results[i].is_paid == false & coursedetail.results[i].published_title != null){
			
			var mape = {

                u_title: coursedetail.results[i].title,
                u_id: coursedetail.results[i].id,
                u_url: coursedetail.results[i].url,
                u_pricing: 'Free',
                u_status: 'Unpublished'

            };
            import_set_table.insert(mape);
			
			
			
			
			
		}

    }


})(import_set_table);]]></data_loader>
        <database_name/>
        <database_port/>
        <discard_arrays>true</discard_arrays>
        <expand_node_children>false</expand_node_children>
        <file_path/>
        <file_retrieval_method>Attachment</file_retrieval_method>
        <format>CSV</format>
        <glide_keystore>false</glide_keystore>
        <header_row>0</header_row>
        <import_set_table_label>Get Course Details Staging Table</import_set_table_label>
        <import_set_table_name>x_314719_udemy_get_course_details_staging_table</import_set_table_name>
        <instance_name/>
        <jdbc_password/>
        <jdbc_server/>
        <jdbc_user_name/>
        <jpath_root_node/>
        <last_run_database_field/>
        <last_run_datetime/>
        <last_success_import_time/>
        <ldap_target/>
        <ldapprobe_result_set_rows>200</ldapprobe_result_set_rows>
        <limit/>
        <maximum_rows/>
        <mid_server/>
        <name>Get Course Details Data Source</name>
        <offset>0</offset>
        <oracle_port>1521</oracle_port>
        <oracle_sid>orcl</oracle_sid>
        <parsing_script><![CDATA[// The input value can be accessed through the variables named "line", "lineNumber" and "result"
// The function uses result variable to return parse result back. 
(function(line,lineNumber,result) {
	// add code here
})(line,lineNumber,result);]]></parsing_script>
        <properties/>
        <query>All Rows from Table</query>
        <query_timeout>0</query_timeout>
        <request_action/>
        <scp_authentication>Username and Password</scp_authentication>
        <scp_password/>
        <scp_port/>
        <scp_server/>
        <scp_user_name/>
        <sheet_number>0</sheet_number>
        <sql_statement/>
        <ssh_keyfile_path/>
        <support_pagination>false</support_pagination>
        <sys_class_name>sys_data_source</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-07-12 09:47:21</sys_created_on>
        <sys_id>45026b80078290103032f1d08c1ed0de</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>Get Course Details Data Source</sys_name>
        <sys_package display_value="Udemy" source="x_314719_udemy">61887ec4078e50103032f1d08c1ed0d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Udemy">61887ec4078e50103032f1d08c1ed0d2</sys_scope>
        <sys_update_name>sys_data_source_45026b80078290103032f1d08c1ed0de</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-07-12 13:09:17</sys_updated_on>
        <table_name/>
        <type>CUSTOM</type>
        <use_integrated_authentication>false</use_integrated_authentication>
        <use_last_run_datetime>false</use_last_run_datetime>
        <xpath_root_node/>
        <zipped>false</zipped>
    </sys_data_source>
</record_update>
